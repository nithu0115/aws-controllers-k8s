// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1
import (
    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

)

type Attribute struct {
	Key *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

type AuthorizationData struct {
	AuthorizationToken *string `json:"authorizationToken,omitempty"`
	ExpiresAt *metav1.Time `json:"expiresAt,omitempty"`
	ProxyEndpoint *string `json:"proxyEndpoint,omitempty"`
}

type DescribeImagesFilter struct {
	TagStatus *string `json:"tagStatus,omitempty"`
}

type Image struct {
	ImageID *ImageIdentifier `json:"imageID,omitempty"`
	ImageManifest *string `json:"imageManifest,omitempty"`
	ImageManifestMediaType *string `json:"imageManifestMediaType,omitempty"`
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
}

type ImageDetail struct {
	ImageDigest *string `json:"imageDigest,omitempty"`
	ImagePushedAt *metav1.Time `json:"imagePushedAt,omitempty"`
	ImageScanFindingsSummary *ImageScanFindingsSummary `json:"imageScanFindingsSummary,omitempty"`
	ImageScanStatus *ImageScanStatus `json:"imageScanStatus,omitempty"`
	ImageSizeInBytes *int64 `json:"imageSizeInBytes,omitempty"`
	ImageTags []*string `json:"imageTags,omitempty"`
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
}

type ImageFailure struct {
	FailureCode *string `json:"failureCode,omitempty"`
	FailureReason *string `json:"failureReason,omitempty"`
	ImageID *ImageIdentifier `json:"imageID,omitempty"`
}

type ImageIdentifier struct {
	ImageDigest *string `json:"imageDigest,omitempty"`
	ImageTag *string `json:"imageTag,omitempty"`
}

type ImageScanFinding struct {
	Attributes []*Attribute `json:"attributes,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Severity *string `json:"severity,omitempty"`
	URI *string `json:"uri,omitempty"`
}

type ImageScanFindings struct {
	FindingSeverityCounts map[string]*int64 `json:"findingSeverityCounts,omitempty"`
	Findings []*ImageScanFinding `json:"findings,omitempty"`
	ImageScanCompletedAt *metav1.Time `json:"imageScanCompletedAt,omitempty"`
	VulnerabilitySourceUpdatedAt *metav1.Time `json:"vulnerabilitySourceUpdatedAt,omitempty"`
}

type ImageScanFindingsSummary struct {
	FindingSeverityCounts map[string]*int64 `json:"findingSeverityCounts,omitempty"`
	ImageScanCompletedAt *metav1.Time `json:"imageScanCompletedAt,omitempty"`
	VulnerabilitySourceUpdatedAt *metav1.Time `json:"vulnerabilitySourceUpdatedAt,omitempty"`
}

type ImageScanStatus struct {
	Description *string `json:"description,omitempty"`
	Status *string `json:"status,omitempty"`
}

type ImageScanningConfiguration struct {
	ScanOnPush *bool `json:"scanOnPush,omitempty"`
}

type Layer struct {
	LayerAvailability *string `json:"layerAvailability,omitempty"`
	LayerDigest *string `json:"layerDigest,omitempty"`
	LayerSize *int64 `json:"layerSize,omitempty"`
	MediaType *string `json:"mediaType,omitempty"`
}

type LayerFailure struct {
	FailureCode *string `json:"failureCode,omitempty"`
	FailureReason *string `json:"failureReason,omitempty"`
	LayerDigest *string `json:"layerDigest,omitempty"`
}

type LifecyclePolicyPreviewFilter struct {
	TagStatus *string `json:"tagStatus,omitempty"`
}

type LifecyclePolicyPreviewResult struct {
	Action *LifecyclePolicyRuleAction `json:"action,omitempty"`
	AppliedRulePriority *int64 `json:"appliedRulePriority,omitempty"`
	ImageDigest *string `json:"imageDigest,omitempty"`
	ImagePushedAt *metav1.Time `json:"imagePushedAt,omitempty"`
	ImageTags []*string `json:"imageTags,omitempty"`
}

type LifecyclePolicyPreviewSummary struct {
	ExpiringImageTotalCount *int64 `json:"expiringImageTotalCount,omitempty"`
}

type LifecyclePolicyRuleAction struct {
	Type *string `json:"type,omitempty"`
}

type ListImagesFilter struct {
	TagStatus *string `json:"tagStatus,omitempty"`
}

type Repository_SDK struct {
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	ImageScanningConfiguration *ImageScanningConfiguration `json:"imageScanningConfiguration,omitempty"`
	ImageTagMutability *string `json:"imageTagMutability,omitempty"`
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryARN *string `json:"repositoryARN,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
	RepositoryURI *string `json:"repositoryURI,omitempty"`
}

type Tag struct {
	Key *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}